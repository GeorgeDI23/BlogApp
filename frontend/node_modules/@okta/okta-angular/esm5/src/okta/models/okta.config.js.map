{"version":3,"file":"okta.config.js","sourceRoot":"","sources":["../../../../src/okta/models/okta.config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAYA,OAAO,EAAE,cAAc,EAAY,MAAM,eAAe,CAAC;;;;AAOzD,mCAEC;;;IADC,0CAA2B;;;;;AAG7B,wCAIC;;;IAHC,uCAAoB;;IACpB,oCAAiB;;IACjB,qCAAiB;;;;;AAGnB,gCAcC;;;IAbC,4BAAgB;;IAChB,iCAAqB;;IACrB,8BAAkB;;IAClB,2BAAe;;IACf,4BAAkB;;IAClB,kCAAmB;;IACnB,0BAAe;;IACf,oCAAsC;;IACtC,6BAAwB;;IACxB,kCAAkC;;IAClC,2CAA+B;;IAC/B,qCAA0C;;IAC1C,sCAA4C;;;AAG9C,MAAM,KAAO,WAAW,GAAG,IAAI,cAAc,CAAa,qBAAqB,CAAC","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuthService } from '../services/okta.service';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuthService, injector: Injector) => void;\nexport type IsAuthenticatedFunction = (oktaAuth: OktaAuthService) => Promise<boolean>;\nexport type OnSessionExpiredFunction = () => void;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface TokenManagerConfig {\n  autoRenew?: boolean;\n  secure?: boolean;\n  storage?: string;\n}\n\nexport interface OktaConfig {\n  issuer?: string;\n  redirectUri?: string;\n  clientId?: string;\n  scope?: string;\n  scopes?: string[];\n  responseType?: any; // can be string or array\n  pkce?: boolean;\n  onAuthRequired?: AuthRequiredFunction;\n  testing?: TestingObject;\n  tokenManager?: TokenManagerConfig;\n  postLogoutRedirectUri?: string;\n  isAuthenticated?: IsAuthenticatedFunction;\n  onSessionExpired?: OnSessionExpiredFunction;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\n"]}