{"version":3,"file":"okta-angular.js","sources":["../package/src/okta/models/okta.config.ts","../package/src/okta/packageInfo.ts","../package/src/okta/services/okta.service.ts","../package/src/okta/components/callback.component.ts","../package/src/okta/components/login-redirect.component.ts","../package/src/okta/okta.guard.ts","../package/src/okta/createService.ts","../package/src/okta/okta.module.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuthService } from '../services/okta.service';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuthService, injector: Injector) => void;\nexport type IsAuthenticatedFunction = (oktaAuth: OktaAuthService) => Promise<boolean>;\nexport type OnSessionExpiredFunction = () => void;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface TokenManagerConfig {\n  autoRenew?: boolean;\n  secure?: boolean;\n  storage?: string;\n}\n\nexport interface OktaConfig {\n  issuer?: string;\n  redirectUri?: string;\n  clientId?: string;\n  scope?: string;\n  scopes?: string[];\n  responseType?: any; // can be string or array\n  pkce?: boolean;\n  onAuthRequired?: AuthRequiredFunction;\n  testing?: TestingObject;\n  tokenManager?: TokenManagerConfig;\n  postLogoutRedirectUri?: string;\n  isAuthenticated?: IsAuthenticatedFunction;\n  onSessionExpired?: OnSessionExpiredFunction;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\n","export default {\n  'name': '@okta/okta-angular',\n  'version': '2.2.0'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Inject, Injectable, Injector } from '@angular/core';\nimport {\n  assertIssuer,\n  assertClientId,\n  assertRedirectUri,\n} from '@okta/configuration-validation';\n\nimport { OKTA_CONFIG, OktaConfig, AuthRequiredFunction } from '../models/okta.config';\nimport { UserClaims } from '../models/user-claims';\nimport { TokenManager, AccessToken, IDToken } from '../models/token-manager';\n\nimport packageInfo from '../packageInfo';\n\n/**\n * Import the okta-auth-js library\n */\nimport OktaAuth from '@okta/okta-auth-js';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class OktaAuthService {\n    private oktaAuth: OktaAuth;\n    private config: OktaConfig;\n    private observers: Observer<boolean>[];\n    $authenticationState: Observable<boolean>;\n\n    constructor(@Inject(OKTA_CONFIG) config: OktaConfig, private injector: Injector) {\n      this.observers = [];\n\n      /**\n       * Cache the auth config.\n       */\n      this.config = Object.assign({}, config);\n      this.config.scopes = this.config.scopes || ['openid', 'email'];\n\n      /**\n       * Scrub scopes to ensure 'openid' is included\n       */\n\n      this.scrubScopes(this.config.scopes);\n\n      // Assert Configuration\n      assertIssuer(this.config.issuer, this.config.testing);\n      assertClientId(this.config.clientId);\n      assertRedirectUri(this.config.redirectUri);\n\n      this.oktaAuth = new OktaAuth(this.config);\n      this.oktaAuth.userAgent = `${packageInfo.name}/${packageInfo.version} ${this.oktaAuth.userAgent}`;\n      this.$authenticationState = new Observable((observer: Observer<boolean>) => { this.observers.push(observer); });\n    }\n\n    login(fromUri?: string, additionalParams?: object) {\n      this.setFromUri(fromUri);\n      const onAuthRequired: AuthRequiredFunction | undefined = this.config.onAuthRequired;\n      if (onAuthRequired) {\n        return onAuthRequired(this, this.injector);\n      }\n      return this.loginRedirect(undefined, additionalParams);\n    }\n\n    getTokenManager(): TokenManager {\n      return this.oktaAuth.tokenManager;\n    }\n\n    /**\n     * Checks if there is an access token OR an id token\n     * A custom method may be provided on config to override this logic\n     */\n    async isAuthenticated(): Promise<boolean> {\n      // Support a user-provided method to check authentication\n      if (this.config.isAuthenticated) {\n        return (this.config.isAuthenticated)(this);\n      }\n\n      const accessToken = await this.getAccessToken();\n      const idToken = await this.getIdToken();\n      return !!(accessToken || idToken);\n    }\n\n    private async emitAuthenticationState(state: boolean) {\n      this.observers.forEach(observer => observer.next(state));\n    }\n\n    /**\n     * Returns the current accessToken in the tokenManager.\n     */\n    async getAccessToken(): Promise<string | undefined>  {\n      try {\n        const accessToken: AccessToken = await this.oktaAuth.tokenManager.get('accessToken') as AccessToken;\n        return accessToken.accessToken;\n      } catch (err) {\n        // The user no longer has an existing SSO session in the browser.\n        // (OIDC error `login_required`)\n        // Ask the user to authenticate again.\n        return undefined;\n      }\n    }\n\n    /**\n     * Returns the current idToken in the tokenManager.\n     */\n    async getIdToken(): Promise<string | undefined> {\n      try {\n        const idToken: IDToken = await this.oktaAuth.tokenManager.get('idToken') as IDToken;\n        return idToken.idToken;\n      } catch (err) {\n        // The user no longer has an existing SSO session in the browser.\n        // (OIDC error `login_required`)\n        // Ask the user to authenticate again.\n        return undefined;\n      }\n    }\n\n    /**\n     * Returns user claims from the /userinfo endpoint.\n     */\n    async getUser(): Promise<UserClaims> {\n      return this.oktaAuth.token.getUserInfo();\n    }\n\n    /**\n     * Returns the configuration object used.\n     */\n    getOktaConfig(): OktaConfig {\n      return this.config;\n    }\n\n    /**\n     * Launches the login redirect.\n     * @param fromUri\n     * @param additionalParams\n     */\n    loginRedirect(fromUri?: string, additionalParams?: object) {\n      if (fromUri) {\n        this.setFromUri(fromUri);\n      }\n\n      const params = Object.assign({\n        scopes: this.config.scopes,\n        responseType: this.config.responseType\n      }, additionalParams);\n\n      return this.oktaAuth.token.getWithRedirect(params); // can throw\n    }\n\n    /**\n     * Stores the intended path to redirect after successful login.\n     * @param uri\n     * @param queryParams\n     */\n    setFromUri(fromUri?: string) {\n      // Use current location if fromUri was not passed\n      fromUri = fromUri || window.location.href;\n      // If a relative path was passed, convert to absolute URI\n      if (fromUri.charAt(0) === '/') {\n        fromUri = window.location.origin + fromUri;\n      }\n      sessionStorage.setItem('referrerPath', fromUri);\n    }\n\n    /**\n     * Returns the referrer path from localStorage or app root.\n     */\n    getFromUri(): string {\n      const fromUri = sessionStorage.getItem('referrerPath') || window.location.origin;\n      sessionStorage.removeItem('referrerPath');\n      return fromUri;\n    }\n\n    /**\n     * Parses the tokens from the callback URL.\n     */\n    async handleAuthentication(): Promise<void> {\n      const res = await this.oktaAuth.token.parseFromUrl();\n      const tokens = res.tokens;\n      if (tokens.accessToken) {\n        this.oktaAuth.tokenManager.add('accessToken', tokens.accessToken as AccessToken);\n      }\n      if (tokens.idToken) {\n        this.oktaAuth.tokenManager.add('idToken', tokens.idToken as IDToken);\n      }\n      if (await this.isAuthenticated()) {\n        this.emitAuthenticationState(true);\n      }\n    }\n\n    /**\n     * Clears the user session in Okta and removes\n     * tokens stored in the tokenManager.\n     * @param options\n     */\n    async logout(options?: any): Promise<void> {\n      let redirectUri = null;\n      options = options || {};\n      if (typeof options === 'string') {\n        redirectUri = options;\n        // If a relative path was passed, convert to absolute URI\n        if (redirectUri.charAt(0) === '/') {\n          redirectUri = window.location.origin + redirectUri;\n        }\n        options = {\n          postLogoutRedirectUri: redirectUri\n        };\n      }\n      await this.oktaAuth.signOut(options);\n      this.emitAuthenticationState(false);\n    }\n\n    /**\n     * Scrub scopes to ensure 'openid' is included\n     * @param scopes\n     */\n    scrubScopes(scopes: string[]): void {\n      if (scopes.indexOf('openid') >= 0) {\n        return;\n      }\n      scopes.unshift('openid');\n    }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(private okta: OktaAuthService) {}\n\n  async ngOnInit() {\n    /**\n     * Handles the response from Okta and parses tokens.\n     */\n    return this.okta.handleAuthentication()\n      .then(() => {\n        /**\n         * Navigate back to the saved uri, or root of application.\n         */\n        const fromUri = this.okta.getFromUri();\n        window.location.replace(fromUri);\n      })\n      .catch(e => {\n        this.error = e.toString();\n      });\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({ template: `` })\nexport class OktaLoginRedirectComponent implements OnInit {\n  constructor(private okta: OktaAuthService) {}\n  async ngOnInit() {\n    return this.okta.loginRedirect();\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { OktaAuthService } from './services/okta.service';\nimport { AuthRequiredFunction } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild {\n  constructor(private oktaAuth: OktaAuthService, private injector: Injector) { }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (await this.oktaAuth.isAuthenticated()) {\n      return true;\n    }\n\n    /**\n     * Get the operation to perform on failed authentication from\n     * either the global config or route data injection.\n     */\n    const onAuthRequired: AuthRequiredFunction = route.data['onAuthRequired'] || this.oktaAuth.getOktaConfig().onAuthRequired;\n\n    /**\n     * Store the current path\n     */\n    this.oktaAuth.setFromUri(state.url);\n\n    if (onAuthRequired) {\n      onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.loginRedirect();\n    }\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    return this.canActivate(route, state);\n  }\n\n}\n","import { Injector } from '@angular/core';\nimport { OktaConfig } from './models/okta.config';\nimport { OktaAuthService } from './services/okta.service';\n\nexport function createOktaService(config: OktaConfig, injector: Injector) {\n  return new OktaAuthService(config, injector);\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule, Injector } from '@angular/core';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaLoginRedirectComponent } from './components/login-redirect.component';\nimport { OktaAuthService } from './services/okta.service';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OKTA_CONFIG } from './models/okta.config';\nimport { createOktaService } from './createService';\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  providers: [\n    OktaAuthGuard,\n    {\n      provide: OktaAuthService,\n      useFactory: createOktaService,\n      deps: [\n        OKTA_CONFIG,\n        Injector\n      ]\n    }\n  ]\n})\nexport class OktaAuthModule {\n\n}\n"]}