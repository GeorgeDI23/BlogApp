/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
import { Component } from '@angular/core';
import { OktaAuthService } from '../services/okta.service';
var OktaCallbackComponent = /** @class */ (function () {
    function OktaCallbackComponent(okta) {
        this.okta = okta;
    }
    /**
     * @return {?}
     */
    OktaCallbackComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                /**
                 * Handles the response from Okta and parses tokens.
                 */
                return [2 /*return*/, this.okta.handleAuthentication()
                        .then(function () {
                        /**
                         * Navigate back to the saved uri, or root of application.
                         * @type {?}
                         */
                        var fromUri = _this.okta.getFromUri();
                        window.location.replace(fromUri);
                    })
                        .catch(function (e) {
                        _this.error = e.toString();
                    })];
            });
        });
    };
    OktaCallbackComponent.decorators = [
        { type: Component, args: [{
                    template: "<div>{{error}}</div>"
                }] }
    ];
    /** @nocollapse */
    OktaCallbackComponent.ctorParameters = function () { return [
        { type: OktaAuthService }
    ]; };
    return OktaCallbackComponent;
}());
export { OktaCallbackComponent };
if (false) {
    /** @type {?} */
    OktaCallbackComponent.prototype.error;
    /** @type {?} */
    OktaCallbackComponent.prototype.okta;
}
//# sourceMappingURL=callback.component.js.map